{"version":3,"sources":["common/Select/Select.module.css","common/Range/Range.module.css","components/ResultData/Components/ResultItem/ResultItem.module.css","components/DepositSelect/DepositSelect.module.css","components/ResultData/ResultData.module.css","components/Calculator/Calculator.module.css","components/PdfButton/PdfButton.module.css","common/Skeleton/styles.module.css","common/Skeleton/Skeleton.tsx","common/Select/customStyle.ts","helpers.ts","common/Select/Select.tsx","components/DepositSelect/DepositSelect.tsx","redux/calculatorSlice.ts","redux/helpers.ts","redux/store.ts","components/DepositSelect/DepositSelectContainer.tsx","common/Range/Components/RangeLabel/RangeLabel.tsx","common/Range/Range.tsx","common/Range/RangeContainer.tsx","components/DepositTerm/DepositTerm.tsx","components/DepositTerm/DepositTermContainer.tsx","components/DepositAmount/DepositAmount.tsx","components/DepositAmount/DepositAmountContainer.tsx","components/ResultData/Components/ResultItem/ResultItem.tsx","components/ResultData/ResultData.tsx","components/ResultData/ResultDataContainer.tsx","components/PdfButton/assets/pdfIcon.svg","components/PdfButton/PdfButton.tsx","hocs/usePdfResult.ts","components/PdfButton/PdfButtonContainer.tsx","components/Calculator/Calculator.tsx","components/Calculator/CalculatorContainer.tsx","api/index.ts","index.tsx"],"names":["module","exports","Skeleton","className","styles","skeleton","customStyles","control","display","height","width","padding","indicatorSeparator","dropdownIndicator","menuList","borderRadius","option","_","isFocused","backgroundColor","isSelected","cursor","getNoun","number","nouns","one","two","five","n","Math","abs","createIncomeResultAmount","currentAmount","currentRate","income","resultAmount","round","numberWithSpace","x","toString","replace","getDataFromArray","arr","key","target","valueName","filter","item","SelectEl","list","onChange","currentCode","defaultValue","selectWrapper","length","select","select__tag","e","value","options","isSearchable","DepositSelect","depositTypeList","dispatchCurrentDeposit","depositSelect","depositSelect__label","Select","calculatorSlice","createSlice","name","initialState","deposits","depositSelectList","currentTerm","reducers","loadDeposits","state","action","payload","createDepositSelectList","map","code","label","setCurrentCode","setCurrentTerm","setCurrentAmount","setCurrentRate","actions","store","configureStore","reducer","calculator","calculatorReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useDispatch","useAppSelector","useSelector","DepositSelectContainer","dispatch","useEffect","memo","RangeLabel","values","currentStepIndex","createLabel","Range","handleInputChange","range","range__top","id","range__result","min","max","RangeContainer","useState","setCurrentStepIndex","NOUNS_DAY","DepositTerm","period","dispatchCurrentTerm","DepositTermContainer","currentParams","period_from","NOUNS_RUB","DepositAmount","DepositAmountContainer","currentSummsRate","summs","summ_from","rates","rate","ResultItem","result","type","resultItem","resultItem__label","resultItem__value","ResultData","isSomeReady","resultData","resultData__row","ResultDataContainer","resultSums","useMemo","PdfButton","downLoad","onClick","button","src","icon","alt","vfs","vfsFonts","pdfMake","PdfButtonContainer","downloadPdf","nameDeposit","fileBody","content","text","style","row","fontSize","marginTop","createPdf","download","usePdfResult","Calculator","calculator__header","CalculatorContainer","a","fetch","then","response","ok","Error","statusText","json","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c36c2fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"Select_selectWrapper__3E8kC\",\"select\":\"Select_select__1asJX\",\"select__tag\":\"Select_select__tag__2jQaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"Range_range__2Z1NE\",\"range__top\":\"Range_range__top__1dLRX\",\"range__result\":\"Range_range__result__3PHE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultItem__label\":\"ResultItem_resultItem__label__3BcCn\",\"resultItem__value\":\"ResultItem_resultItem__value__1mfLh\",\"resultItem\":\"ResultItem_resultItem__23qlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"depositSelect\":\"DepositSelect_depositSelect__3QBQd\",\"depositSelect__label\":\"DepositSelect_depositSelect__label__3qVaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultData\":\"ResultData_resultData__30iaL\",\"resultData__row\":\"ResultData_resultData__row__21WA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator\":\"Calculator_calculator__1I9IT\",\"calculator__header\":\"Calculator_calculator__header__3tKTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PdfButton_button__3TQcP\",\"icon\":\"PdfButton_icon__3bCb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skeleton\":\"styles_skeleton__xblvk\"};","import React, { FC } from 'react';\nimport styles from './styles.module.css';\n\nconst Skeleton: FC = () => {\n    return <div className={styles.skeleton} />;\n};\n\nexport default Skeleton;\n","type CustomStylesType = {\n    isFocused: boolean;\n    isSelected: boolean;\n};\n\nexport const customStyles = {\n    control: () => ({\n        display: 'flex',\n        height: ' 100%',\n        width: '100%',\n        padding: '0 5px 0 10px',\n    }),\n    indicatorSeparator: () => ({\n        display: 'none',\n    }),\n    dropdownIndicator: () => ({\n        display: 'none',\n    }),\n    menuList: () => ({\n        borderRadius: '3px',\n    }),\n    option: (_: any, { isFocused, isSelected }: CustomStylesType) => ({\n        backgroundColor: isSelected\n            ? 'var(--main-accent)'\n            : isFocused\n            ? 'var(--main-accent)'\n            : null,\n        padding: '15px 0 15px 20px',\n        cursor: 'pointer',\n    }),\n};\n","import { IncomeResultAmountType, NounsType } from './types';\n\nexport const getNoun = (number: number, nouns: NounsType): string => {\n    const [one, two, five] = nouns;\n\n    let n = Math.abs(number);\n    n %= 100;\n    if (n >= 5 && n <= 20) {\n        return five;\n    }\n    n %= 10;\n    if (n === 1) {\n        return one;\n    }\n    if (n >= 2 && n <= 4) {\n        return two;\n    }\n\n    return five;\n};\n\nexport const createIncomeResultAmount = (\n    currentAmount: number,\n    currentRate: number\n): IncomeResultAmountType => {\n    const income = (currentAmount / 100) * currentRate;\n    const resultAmount = currentAmount + income;\n\n    return { income: Math.round(income), resultAmount: Math.round(resultAmount) };\n};\n\nexport const numberWithSpace = (x: number): string => {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n};\n\nexport const getDataFromArray = (\n    arr: any,\n    key: string,\n    target: string | number,\n    valueName?: string\n) => {\n    if (valueName) {\n        return arr?.filter((item: any) => item[key] === target)[0]?.[valueName];\n    }\n    return arr?.filter((item: any) => item[key] === target)[0];\n};\n","import React, { FC } from 'react';\nimport Select from 'react-select';\nimport Skeleton from '../Skeleton';\nimport styles from './Select.module.css';\nimport { customStyles } from './customStyle';\nimport { getDataFromArray } from '../../helpers';\nimport { DepositListItemType } from '../../types';\n\ntype SelectElType = {\n    list: DepositListItemType[];\n    onChange: (value: string) => void;\n    currentCode: string;\n};\n\nconst SelectEl: FC<SelectElType> = ({ list, onChange, currentCode }) => {\n    const onChangeHandler = (e: DepositListItemType) => {\n        onChange(e.value);\n    };\n\n    const defaultValue = getDataFromArray(list, 'value', currentCode);\n\n    return (\n        <div className={styles.selectWrapper}>\n            {!!list.length && defaultValue ? (\n                <div className={styles.select}>\n                    <Select\n                        // @ts-ignore\n                        styles={customStyles}\n                        className={styles.select__tag}\n                        defaultValue={defaultValue}\n                        onChange={onChangeHandler}\n                        options={list}\n                        isSearchable={false}\n                    />\n                </div>\n            ) : (\n                <Skeleton />\n            )}\n        </div>\n    );\n};\n\nexport default SelectEl;\n","import React, { FC } from 'react';\nimport Select from '../../common/Select';\nimport styles from './DepositSelect.module.css';\nimport { DepositListItemType } from '../../types';\n\ntype DepositSelectType = {\n    depositTypeList: DepositListItemType[];\n    dispatchCurrentDeposit: (value: string) => void;\n    currentCode: string;\n};\n\nconst DepositSelect: FC<DepositSelectType> = ({\n    depositTypeList,\n    dispatchCurrentDeposit,\n    currentCode,\n}) => {\n    return (\n        <div className={styles.depositSelect}>\n            <label className={styles.depositSelect__label}>Вклад</label>\n            <Select\n                currentCode={currentCode}\n                list={depositTypeList}\n                onChange={dispatchCurrentDeposit}\n            />\n        </div>\n    );\n};\n\nexport default DepositSelect;\n","import { AnyAction, createSlice, PayloadAction, ThunkAction } from '@reduxjs/toolkit';\nimport { createDepositList } from './helpers';\nimport { RootState } from './store';\nimport { getDeposits } from '../api';\nimport { DataJsonType, DepositsType, initialStateType } from '../types';\n\nconst initialState = {\n    deposits: [],\n    depositSelectList: [],\n    currentCode: null as string | null,\n    currentTerm: null as number | null,\n    currentAmount: null as number | null,\n    currentRate: null as number | null,\n} as initialStateType;\n\nexport const calculatorSlice = createSlice({\n    name: 'calculator',\n    initialState,\n    reducers: {\n        loadDeposits: (state, action: PayloadAction<DepositsType>) => {\n            state.deposits = action.payload;\n        },\n        createDepositSelectList: (state, action: PayloadAction<DepositsType>) => {\n            state.depositSelectList = createDepositList(action.payload);\n        },\n        setCurrentCode: (state, action: PayloadAction<string>) => {\n            state.currentCode = action.payload;\n        },\n        setCurrentTerm: (state, action: PayloadAction<number>) => {\n            state.currentTerm = action.payload;\n        },\n        setCurrentAmount: (state, action: PayloadAction<number>) => {\n            state.currentAmount = action.payload;\n        },\n        setCurrentRate: (state, action: PayloadAction<number>) => {\n            state.currentRate = action.payload;\n        },\n    },\n});\n\nexport const {\n    createDepositSelectList,\n    loadDeposits,\n    setCurrentCode,\n    setCurrentTerm,\n    setCurrentAmount,\n    setCurrentRate,\n} = calculatorSlice.actions;\n\nexport const fetchDeposits =\n    (): ThunkAction<void, RootState, unknown, AnyAction> => async (dispatch) => {\n        const response = await getDeposits<DataJsonType>('../data.json');\n\n        dispatch(loadDeposits(response.deposits));\n        dispatch(createDepositSelectList(response.deposits));\n    };\n\nexport default calculatorSlice.reducer;","import { DepositItemType, DepositListItemType, DepositsType } from '../types';\n\nexport const createDepositList = (data: DepositsType): DepositListItemType[] => {\n    return data.map((item: DepositItemType) => ({\n        value: item.code,\n        label: item.name,\n    }));\n};","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport calculatorReducer from './calculatorSlice';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nconst store = configureStore({\n    reducer: {\n        calculator: calculatorReducer,\n    },\n    middleware: getDefaultMiddleware({\n        serializableCheck: false,\n    }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default store;\n","import React, { FC, memo, useEffect } from 'react';\nimport DepositSelect from './DepositSelect';\nimport { setCurrentCode } from '../../redux/calculatorSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/store';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst DepositSelectContainer: FC = () => {\n    const currentCode = useAppSelector((state) => state.calculator.currentCode);\n    const depositSelectList = useAppSelector((state) => state.calculator.depositSelectList);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (depositSelectList.length) {\n            dispatch(setCurrentCode(depositSelectList[0].value));\n        }\n    }, [depositSelectList]);\n\n    const dispatchCurrentDeposit = (value: string) => {\n        dispatch(setCurrentCode(value));\n    };\n\n    return (\n        <DepositSelect\n            currentCode={currentCode}\n            depositTypeList={depositSelectList}\n            dispatchCurrentDeposit={dispatchCurrentDeposit}\n        />\n    );\n};\n\nexport default memo(DepositSelectContainer);\n","import { getNoun, numberWithSpace } from '../../../../helpers';\nimport React, { FC } from 'react';\nimport { NounsType } from '../../../../types';\n\ntype RangeLabelType = {\n    values: number[];\n    currentStepIndex: number;\n    nouns: NounsType;\n};\n\nconst RangeLabel: FC<RangeLabelType> = ({ values, currentStepIndex, nouns }) => {\n    const createLabel = () => {\n        const value = numberWithSpace(values[currentStepIndex]);\n\n        if (currentStepIndex === values.length - 1) {\n            return `больше ${value} ${nouns[3]}`;\n        } else if (currentStepIndex === 0 && values.length > 2) {\n            return `${value} ${getNoun(values[currentStepIndex], nouns)}`;\n        } else {\n            return `от ${value} до ${values[currentStepIndex + 1] - 1} ${getNoun(\n                values[currentStepIndex + 1] - 1,\n                nouns\n            )}`;\n        }\n    };\n\n    return <>{createLabel()}</>;\n};\n\nexport default RangeLabel;\n","import React, { FC } from 'react';\nimport Slider from 'rc-slider';\nimport RangeLabel from './Components/RangeLabel';\nimport Skeleton from '../Skeleton';\nimport styles from './Range.module.css';\nimport './Range.css';\nimport { NounsType } from '../../types';\n\ntype RangeType = {\n    values: number[];\n    nouns: NounsType;\n    currentStepIndex: number;\n    handleInputChange: (e: number) => void;\n    label: string;\n};\n\nconst Range: FC<RangeType> = ({\n    values = [],\n    nouns,\n    handleInputChange,\n    currentStepIndex,\n    label,\n}) => {\n    return (\n        <div className={styles.range}>\n            {values.length ? (\n                <div>\n                    <div className={styles.range__top}>\n                        <div>{label}</div>\n                        <span id=\"output\" className={styles.range__result}>\n                            <RangeLabel\n                                values={values}\n                                currentStepIndex={currentStepIndex}\n                                nouns={nouns}\n                            />\n                        </span>\n                    </div>\n                    <Slider\n                        min={0}\n                        max={values.length - 1}\n                        onChange={handleInputChange}\n                        value={currentStepIndex}\n                    />\n                </div>\n            ) : (\n                <Skeleton />\n            )}\n        </div>\n    );\n};\n\nexport default Range;\n","import React, { FC, useEffect, useState } from 'react';\nimport Range from './Range';\nimport { NounsType } from '../../types';\n\ntype RangeContainerType = {\n    values: number[];\n    nouns: NounsType;\n    onChange: (value: number) => void;\n    label: string;\n};\n\nconst RangeContainer: FC<RangeContainerType> = ({ values = [], nouns, onChange, label }) => {\n    const [currentStepIndex, setCurrentStepIndex] = useState<number>(0);\n\n    const handleInputChange = (e: number) => {\n        setCurrentStepIndex(e);\n        onChange(e);\n    };\n\n    useEffect(() => {\n        setCurrentStepIndex(0);\n    }, [values]);\n\n    return (\n        <Range\n            values={values}\n            nouns={nouns}\n            handleInputChange={handleInputChange}\n            currentStepIndex={currentStepIndex}\n            label={label}\n        />\n    );\n};\n\nexport default RangeContainer;\n","import React, { FC } from 'react';\nimport Range from '../../common/Range';\n\nconst NOUNS_DAY = ['день', 'дней', 'дней', 'дня'];\nconst LABEL_TXT = 'Срок вклада';\n\ntype DepositTermType = {\n    period: number[];\n    dispatchCurrentTerm: (value: number) => void;\n};\n\nconst DepositTerm: FC<DepositTermType> = ({ period, dispatchCurrentTerm }) => {\n    return (\n        <Range values={period} nouns={NOUNS_DAY} onChange={dispatchCurrentTerm} label={LABEL_TXT} />\n    );\n};\n\nexport default DepositTerm;\n","import React, { FC, memo, useEffect } from 'react';\nimport DepositTerm from './DepositTerm';\nimport { setCurrentTerm } from '../../redux/calculatorSlice';\nimport { IPeriod } from '../../types';\nimport { useAppDispatch } from '../../redux/store';\n\ntype DepositTermContainerType = {\n    currentParams: IPeriod[];\n};\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst DepositTermContainer: FC<DepositTermContainerType> = ({ currentParams }) => {\n    const period = currentParams?.map((item) => item.period_from);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (period?.length) {\n            dispatch(setCurrentTerm(period[0]));\n        }\n    }, [period]);\n\n    const dispatchCurrentTerm = (value: number) => {\n        dispatch(setCurrentTerm(period[value]));\n    };\n\n    return <DepositTerm period={period} dispatchCurrentTerm={dispatchCurrentTerm} />;\n};\n\nexport default memo(DepositTermContainer);\n","import React, { FC } from 'react';\nimport Range from '../../common/Range';\n\nconst NOUNS_RUB = ['рубль', 'рубля', 'рублей', 'рубля'];\nconst LABEL_TXT = 'Сумма вклада';\n\ntype DepositAmountType = {\n    period: number[];\n    dispatchCurrentTerm: (value: number) => void;\n};\n\nconst DepositAmount: FC<DepositAmountType> = ({ period, dispatchCurrentTerm }) => {\n    return (\n        <Range values={period} nouns={NOUNS_RUB} onChange={dispatchCurrentTerm} label={LABEL_TXT} />\n    );\n};\n\nexport default DepositAmount;\n","import React, { FC, useEffect } from 'react';\nimport DepositAmount from './DepositAmount';\nimport { setCurrentAmount, setCurrentRate } from '../../redux/calculatorSlice';\nimport { ISumsRate } from '../../types';\nimport {useAppDispatch} from \"../../redux/store\";\n\ntype DepositAmountContainerType = {\n    currentSummsRate: ISumsRate[];\n};\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst DepositAmountContainer: FC<DepositAmountContainerType> = ({ currentSummsRate }) => {\n    const summs = currentSummsRate?.map((item) => item.summ_from);\n    const rates = currentSummsRate?.map((item) => item.rate);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (summs?.length) {\n            dispatch(setCurrentRate(rates[0]));\n            dispatch(setCurrentAmount(summs[0]));\n        }\n    }, [summs]);\n\n    const dispatchCurrentTerm = (value: number) => {\n        dispatch(setCurrentRate(rates[value]));\n        dispatch(setCurrentAmount(summs[value]));\n    };\n\n    return <DepositAmount period={summs} dispatchCurrentTerm={dispatchCurrentTerm} />;\n};\n\nexport default DepositAmountContainer;\n","import React, { FC } from 'react';\nimport Skeleton from '../../../../common/Skeleton';\nimport { numberWithSpace } from '../../../../helpers';\nimport styles from './ResultItem.module.css';\n\ntype ResultItemType = {\n    result: number;\n    label: string;\n    type: string;\n};\n\nconst ResultItem: FC<ResultItemType> = ({ result, label, type }) => {\n    return (\n        <>\n            {!!result ? (\n                <div className={styles.resultItem}>\n                    <div className={styles.resultItem__label}>{label}</div>\n                    <div className={styles.resultItem__value}>{`${numberWithSpace(\n                        result\n                    )} ${type}`}</div>\n                </div>\n            ) : (\n                <Skeleton />\n            )}\n        </>\n    );\n};\n\nexport default ResultItem;\n","import React, { FC } from 'react';\nimport ResultItem from './Components/ResultItem';\nimport { getNoun } from '../../helpers';\nimport styles from './ResultData.module.css';\nimport Skeleton from '../../common/Skeleton';\n\nconst NOUNS_DAY = ['день', 'дня', 'дней'];\n\ntype ResultDataType = {\n    currentRate: number;\n    currentTerm: number;\n    resultAmount: number;\n    income: number;\n};\n\nconst ResultData: FC<ResultDataType> = ({ currentRate, currentTerm, resultAmount, income }) => {\n    const isSomeReady = currentRate || currentTerm || income;\n\n    return (\n        <div className={styles.resultData}>\n            {isSomeReady ? (\n                <div className={styles.resultData__row}>\n                    <ResultItem result={currentRate} label=\"Процентная ставка\" type=\"%\" />\n                    <ResultItem\n                        result={resultAmount}\n                        label={`Сумма через ${currentTerm} ${getNoun(currentTerm, NOUNS_DAY)}`}\n                        type=\"р.\"\n                    />\n                    <ResultItem result={income} label=\"Доход\" type=\"р.\" />\n                </div>\n            ) : (\n                <Skeleton />\n            )}\n        </div>\n    );\n};\n\nexport default ResultData;\n","import React, { FC, memo, useMemo } from 'react';\nimport ResultData from './ResultData';\nimport { createIncomeResultAmount } from '../../helpers';\nimport { useAppSelector } from '../../redux/store';\n\nconst ResultDataContainer: FC = () => {\n    const currentRate = useAppSelector((state) => state.calculator.currentRate);\n    const currentAmount = useAppSelector((state) => state.calculator.currentAmount);\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n\n    const resultSums = useMemo(() => {\n        return createIncomeResultAmount(currentAmount, currentRate);\n    }, [currentRate, currentAmount]);\n\n    return (\n        <>\n            <ResultData\n                currentRate={currentRate}\n                income={resultSums.income}\n                resultAmount={resultSums.resultAmount}\n                currentTerm={currentTerm}\n            />\n        </>\n    );\n};\n\nexport default memo(ResultDataContainer);\n","export default __webpack_public_path__ + \"static/media/pdfIcon.74735100.svg\";","import React, { FC } from 'react';\nimport icon from './assets/pdfIcon.svg';\nimport styles from './PdfButton.module.css';\n\ntype PdfButtonType = {\n    downLoad: () => void;\n};\n\nconst PdfButton: FC<PdfButtonType> = ({ downLoad }) => {\n    return (\n        <button onClick={downLoad} className={styles.button}>\n            <img src={icon} alt=\"pdf icon\" className={styles.icon} />\n        </button>\n    );\n};\n\nexport default PdfButton;\n","import { createIncomeResultAmount, getDataFromArray, getNoun, numberWithSpace } from '../helpers';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\nimport { NounsType } from '../types';\nimport {useAppSelector} from \"../redux/store\";\n\nconst { vfs } = vfsFonts.pdfMake;\npdfMake.vfs = vfs;\n\nconst NOUNS_DAY: NounsType = ['день', 'дня', 'дней'];\n\nexport const usePdfResult = () => {\n    const currentCode = useAppSelector((state) => state.calculator.currentCode);\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n    const currentRate = useAppSelector((state) => state.calculator.currentRate);\n    const currentAmount = useAppSelector((state) => state.calculator.currentAmount);\n    const depositSelectList = useAppSelector((state) => state.calculator.depositSelectList);\n\n    const nameDeposit = getDataFromArray(depositSelectList, 'value', currentCode, 'label');\n\n    const resultSums = createIncomeResultAmount(currentAmount, currentRate);\n\n    const fileBody = {\n        content: [\n            { text: `Вклад: ${nameDeposit}.`, style: 'row' },\n            {\n                text: `Срок вклада: ${currentTerm} ${getNoun(currentTerm, NOUNS_DAY)}.`,\n                style: 'row',\n            },\n            { text: `Процентная ставка: ${currentRate} %.`, style: 'row' },\n            { text: `Сумма вклада: ${numberWithSpace(currentAmount)} рублей.`, style: 'row' },\n            {\n                text: `Сумма через ${currentTerm} ${getNoun(\n                    currentTerm,\n                    NOUNS_DAY\n                )}: ${numberWithSpace(resultSums.resultAmount)} рублей.`,\n                style: 'row',\n            },\n            { text: `Доход: ${numberWithSpace(resultSums.income)} рублей.`, style: 'row' },\n        ],\n\n        styles: {\n            row: {\n                fontSize: 16,\n                marginTop: 5,\n            },\n        },\n    };\n\n    return () => {\n        pdfMake.createPdf(fileBody).download('deposit.pdf');\n    };\n};\n","import React, { FC } from 'react';\nimport PdfButton from './PdfButton';\nimport { usePdfResult } from '../../hocs/usePdfResult';\n\nconst PdfButtonContainer: FC = () => {\n    const downloadPdf = usePdfResult();\n\n    const downLoad = () => {\n        downloadPdf();\n    };\n\n    return <PdfButton downLoad={downLoad} />;\n};\n\nexport default PdfButtonContainer;\n","import React, { FC } from 'react';\nimport DepositSelect from '../DepositSelect';\nimport DepositTerm from '../DepositTerm';\nimport DepositAmount from '../DepositAmount';\nimport ResultData from '../ResultData';\nimport styles from './Calculator.module.css';\nimport PdfButton from '../PdfButton/PdfButtonContainer';\nimport { IPeriod, ISumsRate } from '../../types';\n\ntype CalculatorType = {\n    currentParams: IPeriod[];\n    currentSummsRate: ISumsRate[];\n};\n\nconst Calculator: FC<CalculatorType> = ({ currentParams, currentSummsRate }) => {\n    return (\n        <div className={styles.calculator}>\n            <header className={styles.calculator__header}>\n                <h1>Депозитный калькулятор</h1>\n                <PdfButton />\n            </header>\n            <DepositSelect />\n            <DepositTerm currentParams={currentParams} />\n            <DepositAmount currentSummsRate={currentSummsRate} />\n            <ResultData />\n        </div>\n    );\n};\n\nexport default Calculator;\n","import React, { FC, useEffect, useMemo } from 'react';\nimport Calculator from './Calculator';\nimport { getDataFromArray } from '../../helpers';\nimport { fetchDeposits } from '../../redux/calculatorSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/store';\nimport { IPeriod, ISumsRate } from '../../types';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst CalculatorContainer: FC = () => {\n    const deposits = useAppSelector((state) => state.calculator.deposits);\n    const currentCode = useAppSelector((state) => state.calculator.currentCode);\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n\n    const dispatch = useAppDispatch();\n\n    const currentParams: IPeriod[] = useMemo(\n        () => getDataFromArray(deposits, 'code', currentCode, 'param'),\n        [currentCode]\n    );\n\n    const currentSummsRate: ISumsRate[] = getDataFromArray(\n        currentParams,\n        'period_from',\n        currentTerm,\n        'summs_and_rate'\n    );\n\n    useEffect(() => {\n        dispatch(fetchDeposits());\n    }, []);\n\n    return <Calculator currentParams={currentParams} currentSummsRate={currentSummsRate} />;\n};\n\nexport default CalculatorContainer;\n","export function getDeposits<T>(url: string): Promise<T> {\n    return fetch(url).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.statusText);\n        }\n        return response.json();\n    });\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux';\nimport Calculator from './components/Calculator';\nimport store from './redux/store';\nimport './fonts/fonts.css';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Calculator />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}