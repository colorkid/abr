{"version":3,"sources":["common/Select/Select.module.css","common/Range/Range.module.css","components/ResultData/Components/ResultItem/ResultItem.module.css","components/DepositSelect/DepositSelect.module.css","components/ResultData/ResultData.module.css","components/Calculator/Calculator.module.css","components/PdfButton/PdfButton.module.css","common/Skeleton/styles.module.css","common/Range/Components/RangeLabel/RangeLabel.module.css","common/Select/customStyle.ts","helpers.ts","common/Select/Select.tsx","components/DepositSelect/DepositSelect.tsx","redux/calculatorSlice.ts","redux/helpers.ts","redux/store.ts","components/DepositSelect/DepositSelectContainer.tsx","common/Skeleton/Skeleton.tsx","common/Range/Components/RangeLabel/RangeLabel.tsx","common/Range/Range.tsx","components/DepositTerm/DepositTerm.tsx","components/DepositTerm/DepositTermContainer.tsx","components/DepositAmount/DepositAmount.tsx","components/DepositAmount/DepositAmountContainer.tsx","components/ResultData/Components/ResultItem/ResultItem.tsx","components/ResultData/ResultData.tsx","components/ResultData/ResultDataContainer.tsx","components/PdfButton/assets/pdfIcon.svg","components/PdfButton/PdfButton.tsx","hocs/usePdfResult.ts","components/PdfButton/PdfButtonContainer.tsx","components/Calculator/Calculator.tsx","components/Calculator/CalculatorContainer.tsx","api/index.ts","index.tsx"],"names":["module","exports","customStyles","control","display","height","width","padding","indicatorSeparator","dropdownIndicator","menuList","borderRadius","option","_","isFocused","backgroundColor","isSelected","cursor","getNoun","number","nouns","one","two","five","n","Math","abs","numberWithSpace","x","toString","replace","getDataFromArray","arr","key","target","valueName","filter","item","createData","deposits","currentCode","currentTerm","currentAmount","paramsByCode","paramsByPeriod","period_from","slice","summs_and_rate","rate","summ_from","resultSums","currentRate","income","resultAmount","round","createIncomeResultAmount","minDay","minSum","SelectEl","list","onChange","value","className","styles","selectWrapper","select","select__tag","e","options","isSearchable","DepositSelect","depositTypeList","dispatchCurrentDeposit","depositSelect","depositSelect__label","Select","calculatorSlice","createSlice","name","initialState","depositSelectList","reducers","loadDeposits","state","action","payload","createDepositSelectList","map","code","label","setCurrentCode","setCurrentTerm","setCurrentAmount","setMinDay","setMinSum","setRate","setIncome","setResultAmount","actions","store","configureStore","reducer","calculator","calculatorReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useDispatch","useAppSelector","useSelector","DepositSelectContainer","dispatch","useEffect","length","memo","Skeleton","skeleton","RangeLabel","rangeLabel","valueWithSpace","createLabel","Range","max","min","step","range","range__top","id","range__result","NOUNS_DAY","DepositTerm","dispatchCurrentTerm","DepositTermContainer","NOUNS_RUB","DepositAmount","DepositAmountContainer","ResultItem","result","type","resultItem","resultItem__label","resultItem__value","ResultData","resultData","resultData__row","ResultDataContainer","PdfButton","downLoad","onClick","button","src","icon","alt","vfs","vfsFonts","pdfMake","PdfButtonContainer","downloadPdf","nameDeposit","fileBody","content","text","style","row","fontSize","marginTop","createPdf","download","usePdfResult","Calculator","calculator__header","CalculatorContainer","a","fetch","then","response","ok","Error","statusText","json","results","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0a58875.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"Select_selectWrapper__3E8kC\",\"select\":\"Select_select__1asJX\",\"select__tag\":\"Select_select__tag__2jQaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"Range_range__2Z1NE\",\"range__top\":\"Range_range__top__1dLRX\",\"range__result\":\"Range_range__result__3PHE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultItem__label\":\"ResultItem_resultItem__label__3BcCn\",\"resultItem__value\":\"ResultItem_resultItem__value__1mfLh\",\"resultItem\":\"ResultItem_resultItem__23qlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"depositSelect\":\"DepositSelect_depositSelect__3QBQd\",\"depositSelect__label\":\"DepositSelect_depositSelect__label__3qVaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultData\":\"ResultData_resultData__30iaL\",\"resultData__row\":\"ResultData_resultData__row__21WA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator\":\"Calculator_calculator__1I9IT\",\"calculator__header\":\"Calculator_calculator__header__3tKTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PdfButton_button__3TQcP\",\"icon\":\"PdfButton_icon__3bCb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skeleton\":\"styles_skeleton__xblvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeLabel\":\"RangeLabel_rangeLabel__7GCy-\"};","type CustomStylesType = {\n    isFocused: boolean;\n    isSelected: boolean;\n};\n\nexport const customStyles = {\n    control: () => ({\n        display: 'flex',\n        height: ' 100%',\n        width: '100%',\n        padding: '0 5px 0 10px',\n    }),\n    indicatorSeparator: () => ({\n        display: 'none',\n    }),\n    dropdownIndicator: () => ({\n        display: 'none',\n    }),\n    menuList: () => ({\n        borderRadius: '3px',\n    }),\n    option: (_: any, { isFocused, isSelected }: CustomStylesType) => ({\n        backgroundColor: isSelected\n            ? 'var(--main-accent)'\n            : isFocused\n            ? 'var(--main-accent)'\n            : null,\n        padding: '15px 0 15px 20px',\n        cursor: 'pointer',\n    }),\n};\n","import { DepositsType, IncomeResultAmountType, NounsType } from './types';\n\nexport const getNoun = (number: number, nouns: NounsType): string => {\n    const [one, two, five] = nouns;\n\n    let n = Math.abs(number);\n    n %= 100;\n    if (n >= 5 && n <= 20) {\n        return five;\n    }\n    n %= 10;\n    if (n === 1) {\n        return one;\n    }\n    if (n >= 2 && n <= 4) {\n        return two;\n    }\n\n    return five;\n};\n\nexport const createIncomeResultAmount = (\n    currentAmount: number,\n    currentRate: number,\n    currentTerm: number\n): IncomeResultAmountType => {\n    const income = (currentAmount / 100) * currentRate * currentTerm;\n    const resultAmount = currentAmount + income;\n\n    return { income: Math.round(income), resultAmount: Math.round(resultAmount) };\n};\nexport const numberWithSpace = (x: number): string => {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n};\n\nexport const getDataFromArray = (\n    arr: any,\n    key: string,\n    target: string | number,\n    valueName?: string\n) => {\n    if (valueName) {\n        return arr?.filter((item: any) => item[key] === target)[0]?.[valueName];\n    }\n    return arr?.filter((item: any) => item[key] === target)[0];\n};\n\nexport const createData = (\n    deposits: DepositsType,\n    currentCode: string,\n    currentTerm: number,\n    currentAmount: number\n) => {\n    const paramsByCode: any = getDataFromArray(deposits, 'code', currentCode, 'param');\n\n    const paramsByPeriod = paramsByCode\n        ?.filter((item: any) => item.period_from <= currentTerm)\n        .slice(-1)[0]?.summs_and_rate;\n\n    const rate = paramsByPeriod\n        ?.filter((item: any) => item.summ_from <= currentAmount)\n        .slice(-1)[0]?.rate;\n\n    const resultSums = createIncomeResultAmount(currentAmount, rate, currentTerm);\n\n    return {\n        minDay: paramsByCode?.[0].period_from,\n        minSum: paramsByPeriod?.[0].summ_from,\n        resultSums: resultSums,\n        rate: rate,\n    };\n};\n","import React, { FC } from 'react';\nimport Select from 'react-select';\nimport styles from './Select.module.css';\nimport { customStyles } from './customStyle';\nimport { getDataFromArray } from '../../helpers';\nimport { DepositListItemType } from '../../types';\n\ntype SelectElType = {\n    list: DepositListItemType[];\n    onChange: (value: string) => void;\n    currentCode: string;\n};\n\nconst SelectEl: FC<SelectElType> = ({ list, onChange, currentCode }) => {\n    const onChangeHandler = (e: DepositListItemType) => {\n        onChange(e.value);\n    };\n\n    const value = getDataFromArray(list, 'value', currentCode);\n\n    return (\n        <div className={styles.selectWrapper}>\n            <div className={styles.select}>\n                <Select\n                    // @ts-ignore\n                    styles={customStyles}\n                    className={styles.select__tag}\n                    value={value}\n                    onChange={onChangeHandler}\n                    options={list}\n                    isSearchable={false}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default SelectEl;\n","import React, { FC } from 'react';\nimport Select from '../../common/Select';\nimport styles from './DepositSelect.module.css';\nimport { DepositListItemType } from '../../types';\n\ntype DepositSelectType = {\n    depositTypeList: DepositListItemType[];\n    dispatchCurrentDeposit: (value: string) => void;\n    currentCode: string;\n};\n\nconst DepositSelect: FC<DepositSelectType> = ({\n    depositTypeList,\n    dispatchCurrentDeposit,\n    currentCode,\n}) => {\n    return (\n        <div className={styles.depositSelect}>\n            <label className={styles.depositSelect__label}>Вклад</label>\n            <Select\n                currentCode={currentCode}\n                list={depositTypeList}\n                onChange={dispatchCurrentDeposit}\n            />\n        </div>\n    );\n};\n\nexport default DepositSelect;\n","import { AnyAction, createSlice, PayloadAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { createDepositList } from './helpers';\r\nimport { RootState } from './store';\r\nimport { getDeposits } from '../api';\r\nimport { DataJsonType, DepositsType, initialStateType } from '../types';\r\n\r\nconst initialState = {\r\n    deposits: [],\r\n    depositSelectList: [],\r\n    currentCode: null as string | null,\r\n    currentTerm: null as number | null,\r\n    currentAmount: null as number | null,\r\n    minDay: null as number | null,\r\n    minSum: null as number | null,\r\n    rate: null as number | null,\r\n    income: null as number | null,\r\n    resultAmount: null as number | null,\r\n} as initialStateType;\r\n\r\nexport const calculatorSlice = createSlice({\r\n    name: 'calculator',\r\n    initialState,\r\n    reducers: {\r\n        loadDeposits: (state, action: PayloadAction<DepositsType>) => {\r\n            state.deposits = action.payload;\r\n        },\r\n        createDepositSelectList: (state, action: PayloadAction<DepositsType>) => {\r\n            state.depositSelectList = createDepositList(action.payload);\r\n        },\r\n        setCurrentCode: (state, action: PayloadAction<string>) => {\r\n            state.currentCode = action.payload;\r\n        },\r\n        setCurrentTerm: (state, action: PayloadAction<number>) => {\r\n            state.currentTerm = action.payload;\r\n        },\r\n        setCurrentAmount: (state, action: PayloadAction<number>) => {\r\n            state.currentAmount = action.payload;\r\n        },\r\n        setMinDay: (state, action: PayloadAction<number>) => {\r\n            state.minDay = action.payload;\r\n        },\r\n        setMinSum: (state, action: PayloadAction<number>) => {\r\n            state.minSum = action.payload;\r\n        },\r\n        setRate: (state, action: PayloadAction<number>) => {\r\n            state.rate = action.payload;\r\n        },\r\n        setIncome: (state, action: PayloadAction<number>) => {\r\n            state.income = action.payload;\r\n        },\r\n        setResultAmount: (state, action: PayloadAction<number>) => {\r\n            state.resultAmount = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    createDepositSelectList,\r\n    loadDeposits,\r\n    setCurrentCode,\r\n    setCurrentTerm,\r\n    setCurrentAmount,\r\n    setMinDay,\r\n    setMinSum,\r\n    setRate,\r\n    setIncome,\r\n    setResultAmount\r\n} = calculatorSlice.actions;\r\n\r\nexport const fetchDeposits =\r\n    (): ThunkAction<void, RootState, unknown, AnyAction> => async (dispatch) => {\r\n        const response = await getDeposits<DataJsonType>('../data.json');\r\n\r\n        dispatch(loadDeposits(response.deposits));\r\n        dispatch(createDepositSelectList(response.deposits));\r\n    };\r\n\r\nexport default calculatorSlice.reducer;","import { DepositItemType, DepositListItemType, DepositsType } from '../types';\n\nexport const createDepositList = (data: DepositsType): DepositListItemType[] => {\n    return data.map((item: DepositItemType) => ({\n        value: item.code,\n        label: item.name,\n    }));\n};","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport calculatorReducer from './calculatorSlice';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nconst store = configureStore({\n    reducer: {\n        calculator: calculatorReducer,\n    },\n    middleware: getDefaultMiddleware({\n        serializableCheck: false,\n    }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default store;\n","import React, { FC, memo, useEffect } from 'react';\nimport DepositSelect from './DepositSelect';\nimport { setCurrentCode } from '../../redux/calculatorSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/store';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst DepositSelectContainer: FC = () => {\n    const currentCode = useAppSelector((state) => state.calculator.currentCode);\n    const depositSelectList = useAppSelector((state) => state.calculator.depositSelectList);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (depositSelectList.length) {\n            dispatch(setCurrentCode(depositSelectList[0].value));\n        }\n    }, [depositSelectList]);\n\n    const dispatchCurrentDeposit = (value: string) => {\n        dispatch(setCurrentCode(value));\n    };\n\n    return (\n        <DepositSelect\n            currentCode={currentCode}\n            depositTypeList={depositSelectList}\n            dispatchCurrentDeposit={dispatchCurrentDeposit}\n        />\n    );\n};\n\nexport default memo(DepositSelectContainer);\n","import React, { FC } from 'react';\nimport styles from './styles.module.css';\n\nconst Skeleton: FC = () => {\n    return <div className={styles.skeleton} />;\n};\n\nexport default Skeleton;\n","import { getNoun, numberWithSpace } from '../../../../helpers';\nimport React, { FC } from 'react';\nimport { NounsType } from '../../../../types';\nimport Skeleton from '../../../Skeleton';\nimport styles from './RangeLabel.module.css';\n\ntype RangeLabelType = {\n    value: number;\n    nouns: NounsType;\n};\n\nconst RangeLabel: FC<RangeLabelType> = ({ value, nouns }) => {\n    const createLabel = () => {\n        const valueWithSpace = numberWithSpace(value);\n        return `${valueWithSpace} ${getNoun(value, nouns)}`;\n    };\n\n    return <div className={styles.rangeLabel}>{!!value ? createLabel() : <Skeleton />}</div>;\n};\n\nexport default RangeLabel;\n","import React, { FC } from 'react';\nimport Slider from 'rc-slider';\nimport RangeLabel from './Components/RangeLabel';\nimport styles from './Range.module.css';\nimport './Range.css';\nimport { NounsType } from '../../types';\n\ntype RangeType = {\n    nouns: NounsType;\n    value: number;\n    onChange: (e: number) => void;\n    label: string;\n    min: number;\n    max: number;\n    step: number;\n};\n\nconst Range: FC<RangeType> = ({ nouns, onChange, value, label, max, min, step }) => {\n    return (\n        <div className={styles.range}>\n            <div>\n                <div className={styles.range__top}>\n                    <div>{label}</div>\n                    <span id=\"output\" className={styles.range__result}>\n                        <RangeLabel value={value} nouns={nouns} />\n                    </span>\n                </div>\n                <Slider min={min} max={max} step={step} onChange={onChange} value={value} />\n            </div>\n        </div>\n    );\n};\n\nexport default Range;\n","import React, { FC } from 'react';\nimport Range from '../../common/Range';\n\nconst NOUNS_DAY = ['день', 'дней', 'дней', 'дня'];\nconst LABEL_TXT = 'Срок вклада';\n\ntype DepositTermType = {\n    dispatchCurrentTerm: (value: number) => void;\n    step: number;\n    currentTerm: number;\n    min: number;\n    max: number;\n};\n\nconst DepositTerm: FC<DepositTermType> = ({ dispatchCurrentTerm, step, currentTerm, min, max }) => {\n    return (\n        <Range\n            nouns={NOUNS_DAY}\n            onChange={dispatchCurrentTerm}\n            value={currentTerm}\n            label={LABEL_TXT}\n            step={step}\n            min={min}\n            max={max}\n        />\n    );\n};\n\nexport default DepositTerm;\n","import React, { FC, memo, useEffect } from 'react';\nimport DepositTerm from './DepositTerm';\nimport { setCurrentTerm } from '../../redux/calculatorSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/store';\n\nconst TERM_MAX = 365;\nconst TERM_STEP = 1;\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst DepositTermContainer: FC = () => {\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n    const min = useAppSelector((state) => state.calculator.minDay);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(setCurrentTerm(TERM_STEP));\n    }, []);\n\n    const dispatchCurrentTerm = (value: number) => {\n        dispatch(setCurrentTerm(value));\n    };\n\n    return (\n        <DepositTerm\n            dispatchCurrentTerm={dispatchCurrentTerm}\n            currentTerm={currentTerm}\n            min={min}\n            max={TERM_MAX}\n            step={TERM_STEP}\n        />\n    );\n};\n\nexport default memo(DepositTermContainer);\n","import React, { FC } from 'react';\nimport Range from '../../common/Range';\n\nconst NOUNS_RUB = ['рубль', 'рубля', 'рублей', 'рубля'];\nconst LABEL_TXT = 'Сумма вклада';\n\ntype DepositAmountType = {\n    dispatchCurrentTerm: (value: number) => void;\n    step: number;\n    currentAmount: number;\n    min: number;\n    max: number;\n};\n\nconst DepositAmount: FC<DepositAmountType> = ({\n    dispatchCurrentTerm,\n    currentAmount,\n    min,\n    max,\n    step\n}) => {\n    return (\n        <Range\n            min={min}\n            max={max}\n            step={step}\n            value={currentAmount}\n            nouns={NOUNS_RUB}\n            onChange={dispatchCurrentTerm}\n            label={LABEL_TXT}\n        />\n    );\n};\n\nexport default DepositAmount;\n","import React, { FC, useEffect } from 'react';\nimport DepositAmount from './DepositAmount';\nimport { setCurrentAmount } from '../../redux/calculatorSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/store';\n\nconst AMOUNT_MAX = 100000000;\nconst AMOUNT_STEP = 1000;\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst DepositAmountContainer: FC = () => {\n    const currentAmount = useAppSelector((state) => state.calculator.currentAmount);\n    const min = useAppSelector((state) => state.calculator.minSum);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!currentAmount) {\n            dispatch(setCurrentAmount(min));\n        }\n    }, [min]);\n\n    const dispatchCurrentTerm = (value: number) => {\n        dispatch(setCurrentAmount(value));\n    };\n\n    return (\n        <DepositAmount\n            dispatchCurrentTerm={dispatchCurrentTerm}\n            currentAmount={currentAmount}\n            min={min}\n            max={AMOUNT_MAX}\n            step={AMOUNT_STEP}\n        />\n    );\n};\n\nexport default DepositAmountContainer;\n","import React, { FC } from 'react';\nimport { numberWithSpace } from '../../../../helpers';\nimport styles from './ResultItem.module.css';\nimport Skeleton from '../../../../common/Skeleton';\n\ntype ResultItemType = {\n    result: number;\n    label: string;\n    type: string;\n};\n\nconst ResultItem: FC<ResultItemType> = ({ result, label, type }) => {\n    return (\n        <>\n            {!!result ? (\n                <div className={styles.resultItem}>\n                    <div className={styles.resultItem__label}>{label}</div>\n                    <div className={styles.resultItem__value}>{`${numberWithSpace(\n                        result\n                    )} ${type}`}</div>\n                </div>\n            ) : (\n                <Skeleton />\n            )}\n        </>\n    );\n};\n\nexport default ResultItem;\n","import React, { FC } from 'react';\nimport ResultItem from './Components/ResultItem';\nimport { getNoun } from '../../helpers';\nimport styles from './ResultData.module.css';\nimport Skeleton from '../../common/Skeleton';\n\nconst NOUNS_DAY = ['день', 'дня', 'дней'];\n\ntype ResultDataType = {\n    rate: number;\n    currentTerm: number;\n    resultAmount: number;\n    income: number;\n};\n\nconst ResultData: FC<ResultDataType> = ({ rate, currentTerm, resultAmount, income }) => {\n    return (\n        <div className={styles.resultData}>\n            <div className={styles.resultData__row}>\n\n                    <ResultItem result={rate} label=\"Процентная ставка\" type=\"%\" />\n\n\n                    <ResultItem\n                        result={resultAmount}\n                        label={`Сумма через ${currentTerm} ${getNoun(currentTerm, NOUNS_DAY)}`}\n                        type=\"р.\"\n                    />\n\n                {!!income ? <ResultItem result={income} label=\"Доход\" type=\"р.\" /> :  <Skeleton />}\n            </div>\n        </div>\n    );\n};\n\nexport default ResultData;\n","import React, { FC, memo } from 'react';\nimport ResultData from './ResultData';\nimport { useAppSelector } from '../../redux/store';\n\nconst ResultDataContainer: FC = () => {\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n    const rate = useAppSelector((state) => state.calculator.rate);\n    const income = useAppSelector((state) => state.calculator.income);\n    const resultAmount = useAppSelector((state) => state.calculator.resultAmount);\n\n    return (\n        <>\n            <ResultData\n                rate={rate}\n                income={income}\n                resultAmount={resultAmount}\n                currentTerm={currentTerm}\n            />\n        </>\n    );\n};\n\nexport default memo(ResultDataContainer);\n","export default __webpack_public_path__ + \"static/media/pdfIcon.74735100.svg\";","import React, { FC } from 'react';\nimport icon from './assets/pdfIcon.svg';\nimport styles from './PdfButton.module.css';\n\ntype PdfButtonType = {\n    downLoad: () => void;\n};\n\nconst PdfButton: FC<PdfButtonType> = ({ downLoad }) => {\n    return (\n        <button onClick={downLoad} className={styles.button}>\n            <img src={icon} alt=\"pdf icon\" className={styles.icon} />\n        </button>\n    );\n};\n\nexport default PdfButton;\n","import { getDataFromArray, getNoun, numberWithSpace } from '../helpers';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\nimport { NounsType } from '../types';\nimport {useAppSelector} from \"../redux/store\";\n\nconst { vfs } = vfsFonts.pdfMake;\npdfMake.vfs = vfs;\n\nconst NOUNS_DAY: NounsType = ['день', 'дня', 'дней'];\n\nexport const usePdfResult = () => {\n    const currentCode = useAppSelector((state) => state.calculator.currentCode);\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n    const rate = useAppSelector((state) => state.calculator.rate);\n    const currentAmount = useAppSelector((state) => state.calculator.currentAmount);\n    const resultAmount = useAppSelector((state) => state.calculator.resultAmount);\n    const income = useAppSelector((state) => state.calculator.income);\n    const depositSelectList = useAppSelector((state) => state.calculator.depositSelectList);\n\n    const nameDeposit = getDataFromArray(depositSelectList, 'value', currentCode, 'label');\n\n    const fileBody = {\n        content: [\n            { text: `Вклад: ${nameDeposit}.`, style: 'row' },\n            {\n                text: `Срок вклада: ${currentTerm} ${getNoun(currentTerm, NOUNS_DAY)}.`,\n                style: 'row',\n            },\n            { text: `Процентная ставка: ${rate} %.`, style: 'row' },\n            { text: `Сумма вклада: ${numberWithSpace(currentAmount)} рублей.`, style: 'row' },\n            {\n                text: `Сумма через ${currentTerm} ${getNoun(\n                    currentTerm,\n                    NOUNS_DAY\n                )}: ${numberWithSpace(resultAmount)} рублей.`,\n                style: 'row',\n            },\n            { text: `Доход: ${numberWithSpace(income)} рублей.`, style: 'row' },\n        ],\n\n        styles: {\n            row: {\n                fontSize: 16,\n                marginTop: 5,\n            },\n        },\n    };\n\n    return () => {\n        pdfMake.createPdf(fileBody).download('deposit.pdf');\n    };\n};\n","import React, { FC } from 'react';\nimport PdfButton from './PdfButton';\nimport { usePdfResult } from '../../hocs/usePdfResult';\n\nconst PdfButtonContainer: FC = () => {\n    const downloadPdf = usePdfResult();\n\n    const downLoad = () => {\n        downloadPdf();\n    };\n\n    return <PdfButton downLoad={downLoad} />;\n};\n\nexport default PdfButtonContainer;\n","import React, { FC } from 'react';\nimport DepositSelect from '../DepositSelect';\nimport DepositTerm from '../DepositTerm';\nimport DepositAmount from '../DepositAmount';\nimport ResultData from '../ResultData';\nimport styles from './Calculator.module.css';\nimport PdfButton from '../PdfButton/PdfButtonContainer';\n\nconst Calculator: FC = () => {\n    return (\n        <div className={styles.calculator}>\n            <header className={styles.calculator__header}>\n                <h1>Депозитный калькулятор</h1>\n                <PdfButton />\n            </header>\n            <DepositSelect />\n            <DepositTerm />\n            <DepositAmount />\n            <ResultData />\n        </div>\n    );\n};\n\nexport default Calculator;\n","import React, { FC, useEffect } from 'react';\nimport Calculator from './Calculator';\nimport {\n    fetchDeposits,\n    setIncome,\n    setMinDay,\n    setMinSum,\n    setRate,\n    setResultAmount,\n} from '../../redux/calculatorSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/store';\nimport { createData } from '../../helpers';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst CalculatorContainer: FC = () => {\n    const deposits = useAppSelector((state) => state.calculator.deposits);\n    const currentCode = useAppSelector((state) => state.calculator.currentCode);\n    const currentTerm = useAppSelector((state) => state.calculator.currentTerm);\n    const currentAmount = useAppSelector((state) => state.calculator.currentAmount);\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(fetchDeposits());\n    }, []);\n\n    const results = createData(deposits, currentCode, currentTerm, currentAmount);\n\n    dispatch(setMinDay(results.minDay));\n    dispatch(setMinSum(results.minSum));\n    dispatch(setRate(results.rate));\n    dispatch(setIncome(results.resultSums.income));\n    dispatch(setResultAmount(results.resultSums.resultAmount));\n\n    return <Calculator />;\n};\n\nexport default CalculatorContainer;\n","export function getDeposits<T>(url: string): Promise<T> {\r\n    return fetch(url).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        return response.json();\r\n    });\r\n}\r\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux';\nimport Calculator from './components/Calculator';\nimport store from './redux/store';\nimport './fonts/fonts.css';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Calculator />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}